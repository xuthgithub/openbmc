#!/bin/bash

if [ -z "$DISTRO_DEFAULT" ]; then
  DISTRO_DEFAULT=rocko
else
  echo "WARNING: distro is set to ${DISTRO_DEFAULT} based on DISTRO_DEFAULT env variable"
fi
declare -a DISTRO_OVERRIDES
# Add overrides here on a per-platform basis.
#DISTRO_OVERRIDES=(
#  meta-fbtp:thud
#)

platform="$1"
_distro="${DISTRO_DEFAULT}"

if [ -n "$BASH_SOURCE" ]; then
    THIS_SCRIPT=$BASH_SOURCE
elif [ -n "$ZSH_NAME" ]; then
    THIS_SCRIPT=$0
else
    THIS_SCRIPT="$(pwd)/openbmc-init-build-env"
fi

if [ -z "$ZSH_NAME" ] && [ "$0" = "$THIS_SCRIPT" ]; then
    echo "Error: This script needs to be sourced. Please run as '. $THIS_SCRIPT $*'"
    exit 1
fi
unset THIS_SCRIPT

# Make sure specific BSP is set
if [ -z "$TEMPLATECONF" ]; then
    if [ -z "$1" ]; then
        echo "A specific BSP must be provided:"
        echo "e.g.:"
        echo "    . openbmc-init-build-env meta-facebook/meta-wedge"
        return 1
    fi
    if [ -d "$(pwd)/$1" ]; then
        TEMPLATECONF="$(pwd)/$1/conf"
    elif [ -d "$(pwd)/meta-$1" ]; then
        TEMPLATECONF="$(pwd)/meta-$1/conf"
    else
        machines=$(find . -maxdepth 6 -wholename "*/machine/*" -type f)
        for md in ${machines}; do
            machine=$(basename "$md" | sed 's/\.conf//')
            meta=$(dirname "$(dirname "$md")")
            meta=$(echo "$meta" | sed 's/\.\///')
            if [ "$machine" == "$platform" ]; then
                TEMPLATECONF="$(pwd)/$meta"
                echo "$NTEMPLATECONF"
                break
            fi
        done
        if [ -z "$TEMPLATECONF" ]; then
            echo "Neither $(pwd)/$1 nor $(pwd)/meta-$1 exists"
            return 1
        fi
    fi
    export TEMPLATECONF
    shift 1
fi

for override in ${DISTRO_OVERRIDES[*]}; do
    override_plat=${override%%:*}
    override_distro=${override##*:}
    if [[ "${platform/${override_plat}/}" != "${platform}" ]]; then
        # override happens
        _distro="${override_distro}"
    fi
done
unset DISTRO_DEFAULT DISTRO_OVERRIDES
unset override override_plat override_distro

echo "Init build environment for platform '${platform}' with distro ${_distro}..."
unset platform
# shellcheck disable=SC1090
# distro can vary, so we can't use a shellcheck directive to point to next
. "yocto/${_distro}/poky/oe-init-build-env" "$@"

if [ -d "../facebook" ]; then
  ../facebook/facebookify.sh "$(pwd)"
fi
